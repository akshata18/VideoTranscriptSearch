(Refer Slide Time: 33:05) 

 Before that, let us see how a parser specification is written for a very simple expression parser. Let us use YACC for this. Yet Another Compiler-Compiler is the expansion of the acronym YACC. YACC has a language for describing context-free grammars. The productions are all going to be described by this particular language. It generates an LALR 1 parser for the context-free grammar that we describe. Its description is very similar. There are declarations very similar to that of LEX. There are declarations, which are optional, then the rules are context-free grammar productions, which are compulsory, and then some programs. What is important is that YACC uses the lexical analyzer generated by LEX with great ease. The terminal symbols of the context-free grammar, which are specified by YACC should actually be produced as tokens by the lexical analyzer. Finally, YACC generates a file called y dot tab dot c. 




